/**
 * Получить подстроку исходной строки содержащую первые `x` символов и добавляем многоточие.
 *
 * Важно:
 *  - число `x` уменьшается до вхождения целого слова
 *  - максимальная длина строки с учетом ноготочия `x + 3`
 */
export function cutspace(str: string, x: number): string {
  let length = str.length

  /**
   * Удалить лишние занки препинания (все вхождения которые нашли) с конца (не всё множество).
   *
   * Удаляем:
   *  - только открывающие скобки: `привет мир)...` выглядит ок, `привет мир(...` выглядит не ок
   *  - знаки препинания: `привет мир,...` или `привет мир!...` выглядит не ок
   *  - доп. разметку: `привет мир_...` не ок
   *  - тире: `привет мир —...` выглядит сомнительно
   *
   * Осознанно не удаляем:
   *  - кавычки: в текущих реалиях нет необходимости.
   */
  const lastWordPostProcess = (word: string): string => word.replace(/[—–−\-^_@&№#?.!…:;[({⟨]*$/g, '')

  if (length > x) {
    const words = str.split(/\s/)

    while (length > x) {
      const word = words.pop() || ''

      length -= (word.length + 1) // +1 (длина пробела)
    }
    words.push(lastWordPostProcess(words.pop() || ''))

    return `${words.join(' ')}...`
  }
  return str
}
